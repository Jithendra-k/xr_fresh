<<<<<<< HEAD
# name: Deploy Sphinx documentation to Pages
=======
# name: Deploy Sphinx documentation to using github actions
>>>>>>> rebuild-sphinx-quickstart

# on:
#   push:
#     branches: [master] # branch to trigger deployment
#   workflow_dispatch:  # This line adds the manual trigger option

# jobs:
#   pages:
#     runs-on: ubuntu-20.04
#     steps:
#     - name: Install dependencies
#       run: |
#         python -m pip install -U sphinx
#         python -m pip install sphinx-rtd-theme mathjax sphinxcontrib-napoleon numpydoc ipython
#     - id: deployment
#       uses: sphinx-notes/pages@v3
#       with:
#         publish: false
#         documentation_path: './docs/source'
#     - uses: peaceiris/actions-gh-pages@v3
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: ${{ steps.deployment.outputs.artifact }}

<<<<<<< HEAD
name: Documentation gh-pages branch
=======
name: Deploy Sphinx documentation to Pages using gh-pages branch
>>>>>>> rebuild-sphinx-quickstart

on:
  push:
    branches: [master] # branch to trigger deployment
  workflow_dispatch:  # This line adds the manual trigger option

jobs:
  pages:
    runs-on: ubuntu-20.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

<<<<<<< HEAD
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

=======
>>>>>>> rebuild-sphinx-quickstart
    - name: Install GDAL binaries
      run: |
        sudo apt update && sudo apt install -y software-properties-common
        sudo add-apt-repository ppa:ubuntugis/ppa -y
        sudo apt update && sudo apt install -y gdal-bin libgdal-dev libgl1 libspatialindex-dev g++ libmysqlclient-dev
        echo "CPLUS_INCLUDE_PATH=/usr/include/gdal" >> $GITHUB_ENV
        echo "C_INCLUDE_PATH=/usr/include/gdal" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=/usr/local/lib" >> $GITHUB_ENV

    - name: Install Python packages
      run: |
<<<<<<< HEAD
        pip install -U pip setuptools wheel jax cython
=======
        pip install -U pip setuptools wheel
>>>>>>> rebuild-sphinx-quickstart
        pip install numpy
        GDAL_VERSION=$(gdal-config --version | awk -F'[.]' '{print $1"."$2}')
        pip install GDAL==$GDAL_VERSION --no-cache-dir

    - name: Install GeoWombat
      run: |
        pip install "geowombat@git+https://github.com/jgrss/geowombat.git"

<<<<<<< HEAD
    - name: Install xr_fresh
      run: |
        python -m pip install -U sphinx
        python -m pip install sphinx-rtd-theme mathjax sphinxcontrib-napoleon numpydoc ipython
        pip install -e "." 

    # - name: Run Unittests
    #   run: |
    #     pip install testfixtures
    #     python -m unittest discover -s tests -p 'test_feature*.py'
    - name: Build Sphinx documentation
      run: |
        sphinx-build -E -b html docs/source docs/build/html
=======
    - name: Install dependencies
      run: |
        python -m pip install -U sphinx jax 
        python -m pip install sphinx-rtd-theme mathjax sphinxcontrib-napoleon numpydoc ipython 
        python -m pip install -e .
>>>>>>> rebuild-sphinx-quickstart

    - id: deployment
      uses: sphinx-notes/pages@v3 
      with:
        documentation_path: './docs/source'
 